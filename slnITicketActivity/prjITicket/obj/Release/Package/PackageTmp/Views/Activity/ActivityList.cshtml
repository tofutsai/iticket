@using prjITicket.Models;
@using prjITicket.ViewModel;
@model VMActivityList
@{
    ViewBag.Title = "活動一覽";
}
<link href="~/Content/PagedList.css" rel="stylesheet" />
<link href="~/Content/Activity/MultiRange/nouislider.min.css" rel="stylesheet" />
<script src="~/Content/Activity/MultiRange/nouislider.min.js"></script>
<!--引用漂亮彈框-->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<style>
    #min, #max {
        width: 70px;
    }

    .addToFavourite {
        line-height: 25px;
        background-color: black;
        text-align: center;
        position: absolute;
        top: 10px;
        right: 0px;
        color: white;
        padding: 6px;
        font-size: 15px;
        display: none;
    }
</style>
<script>
    var html5Slider;
    $(function () {
        //MultiRange的激活程式碼
        html5Slider = document.getElementById('slider');
        noUiSlider.create(html5Slider, {
            start: [0, @(Model.MaxPriceAll/2)],
            connect: true,
            range: {
                'min': 0,
                'max':@Model.MaxPriceAll
            }
        });
        //根據歷史紀錄的hash值判斷網頁要載入哪個Ajax頁
        if (history.pushState) {
            window.onpopstate = function (e) {
                //顯示排序按鈕的狀態
                loadOrderModeBtnStatus();
                //顯示價格篩選器的狀態
                loadPriceFilterStatus();
                if (e.state == null) {
                    if (window.location.hash != "") {
                        loadActivityPageByHashObj(turnToHashObj(window.location.hash.substring(1)));
                    }
                    else {
                        getActivityPages(1, "scoredown");
                    }
                }
                else {
                    let hashObj = e.state;
                    loadActivityPageByHashObj(hashObj);
                }
            }
        }
        //網頁刷新時通過hash判斷載入相同畫面
        if (window.location.hash == "") {
            saveHistory(`action=all&orderMode=scoredown&page=1`);
            getActivityPages(1,"scoredown");
        }
        else {
            let hashObj = turnToHashObj(window.location.hash.substring(1));
            loadActivityPageByHashObj(hashObj);
        }
        //網頁載入刷新排序按鈕狀態,刷新價格篩選器狀態
        loadOrderModeBtnStatus();
        loadPriceFilterStatus();
        //價格,評價排序器有變化就執行排序
        $(":radio").change(function () {
            let orderMode = $(this).val();
            if (window.location.hash != "") {
                let hash = window.location.hash.substring(1);
                let keyValues = hash.split("&");
                for (let i = 0; i < keyValues.length; i++) {
                    if (keyValues[i].indexOf("orderMode") != -1) {
                        keyValues[i] = `orderMode=${orderMode}`;
                    }
                    if (keyValues[i].indexOf("page") != -1) {
                        keyValues[i] = "page=1";
                    }
                }
                let newHash = keyValues.join("&");
                saveHistory(newHash);
                loadActivityPageByHashObj(turnToHashObj(newHash));
            }
            else {
                let newHash = `action=all&orderMode=${orderMode}&page=1`;
                saveHistory(newHash);
                loadActivityPageByHashObj(turnToHashObj(newHash));
            }
        });
        $("#btnSearch").click(function () {
            let keyword = $("#txtKeyword").val().trim();
            if (!keyword) return;
            let orderMode = $(":radio:checked").val();
            /////////////////////////////////
            console.log(orderMode);
            /////////////////////////////////
            let priceFilter = $("#priceFilter").prop("checked") ? 1 : 0;
            let values = html5Slider.noUiSlider.get();
            let minPrice = Math.round(values[0]);
            let maxPrice = Math.round(values[1]);
            saveHistory(`priceFilter=${priceFilter}&maxPrice=${maxPrice}&minPrice=${minPrice}&action=keyword&keyword=${keyword}&orderMode=${orderMode}&page=1`);
            getActivityPagesByKeyword(1, keyword,orderMode,minPrice,maxPrice,priceFilter);
        });
        $("#btnGetAll").click(function () {
            let orderMode = $(":radio:checked").val();
            /////////////////////////////////
            console.log(orderMode);
            /////////////////////////////////
            let priceFilter = $("#priceFilter").prop("checked") ? 1 : 0;
            let values = html5Slider.noUiSlider.get();
            let minPrice = Math.round(values[0]);
            let maxPrice = Math.round(values[1]);
            saveHistory(`priceFilter=${priceFilter}&maxPrice=${maxPrice}&minPrice=${minPrice}&action=all&orderMode=${orderMode}&page=1`);
            getActivityPages(1,orderMode,minPrice,maxPrice,priceFilter);
        });
        //讀取城市資料到下拉框
        loadDataToSelCity();
        //城市有變化就動態變更區下拉框的內容
        $("#selCity").change(function () {
            loadDataToSelDistrictByCityId(this.value);
        });
        //按照城市地區搜索活動的按鈕事件
        $("#btnCityDis").click(function () {
            let cityId = $("#selCity").val();
            let districtId = $("#selDistrict").val();
            if (cityId == -1) {
                return;
            }
            let orderMode = $(":radio:checked").val();
            /////////////////////////////////
            console.log(orderMode);
            /////////////////////////////////
            let priceFilter = $("#priceFilter").prop("checked") ? 1 : 0;
            let values = html5Slider.noUiSlider.get();
            let minPrice = Math.round(values[0]);
            let maxPrice = Math.round(values[1]);
            saveHistory(`priceFilter=${priceFilter}&maxPrice=${maxPrice}&minPrice=${minPrice}&action=district&districtId=${districtId}&orderMode=${orderMode}&page=1`);
            getActivityPagesByDistrictId(1, districtId, orderMode,minPrice,maxPrice,priceFilter);
        });
        //保持價格篩選跟input框的值同步
        var inputMin = document.getElementById('min');
        var inputMax = document.getElementById('max');
        html5Slider.noUiSlider.on('update', function (values, handle) {
            var value = values[handle];
            if (handle) {
                inputMax.value = Math.round(value);
            } else {
                inputMin.value = Math.round(value);
            }
        });
        //價格篩選有變化時要做的動作
        html5Slider.noUiSlider.on("set", function (values) {
            let priceFilter = $("#priceFilter").prop("checked") ? 1 : 0;
            if (!priceFilter) return;
            let minPrice = Math.round(values[0]);
            let maxPrice = Math.round(values[1]);
            priceFilterConditionChange(minPrice, maxPrice, priceFilter);
        });
        //價格篩選checkbox變化時的事件
        $("#priceFilter").change(function () {
            let priceFilter = $(this).prop("checked") ? 1 : 0;
            let values = html5Slider.noUiSlider.get();
            let minPrice = Math.round(values[0]);
            let maxPrice = Math.round(values[1]);
            priceFilterConditionChange(minPrice, maxPrice, priceFilter);
        });
        //滑鼠移入卡片show出收藏按鈕
        $("#showActivities").on("mouseenter", ".activityListItem", function () {
            $(this).find(".addToFavourite").show();
        });
        //移除時收藏按鈕消失
        $("#showActivities").on("mouseleave", ".activityListItem", function () {
            $(this).find(".addToFavourite").hide();
        });
    });
    //獲得hash紀錄參數的物件
    function turnToHashObj(hash) {
        let params = hash.split("&");
        let keyValuePair = {};
        for (let param of params) {
            let key = param.split("=")[0];
            let value = param.split("=")[1];
            keyValuePair[key] = value;
        }
        return keyValuePair;
    }
    function saveHistory(hash) {
        history.pushState(turnToHashObj(hash), null, `#${hash}`);
    }
    function loadActivityPageByHashObj(hashObj) {
        switch (hashObj.action) {
            case "all":
                getActivityPages(hashObj.page,hashObj.orderMode,hashObj.minPrice,hashObj.maxPrice,hashObj.priceFilter);
                break;
            case "keyword":
                getActivityPagesByKeyword(hashObj.page, hashObj.keyword, hashObj.orderMode, hashObj.minPrice, hashObj.maxPrice, hashObj.priceFilter);
                break;
            case "category":
                getActivityPagesByCategoryId(hashObj.page, hashObj.categoryid, hashObj.orderMode, hashObj.minPrice, hashObj.maxPrice, hashObj.priceFilter);
                break;
            case "subcategory":
                getActivityPagesBySubCategoryId(hashObj.page, hashObj.subcategoryid, hashObj.orderMode, hashObj.minPrice, hashObj.maxPrice, hashObj.priceFilter);
                break;
            case "district":
                getActivityPagesByDistrictId(hashObj.page, hashObj.districtId, hashObj.orderMode, hashObj.minPrice, hashObj.maxPrice, hashObj.priceFilter);
                break;
            default:
                getActivityPages(1,"scoredown");
        }
    }
    //獲得全部活動資料頁的函數
    function getActivityPages(pageNum,orderMode,minPrice,maxPrice,priceFilter) {
        $.ajax({
            type: "get",
            url: "@Url.Action("GetActivityPages")",
            data: { currentPage: pageNum,orderMode:orderMode,minPrice:minPrice,maxPrice:maxPrice,priceFilter:priceFilter},
            success: function (result) {
                $("#showActivities").html(result);
                returnToActivityList();
            }
        })
    }
    //通過關鍵字獲得活動資料頁
    function getActivityPagesByKeyword(pageNum, keyword, orderMode, minPrice, maxPrice, priceFilter) {
        keyword = decodeURI(keyword);
        $.ajax({
            type: "get",
            url: "@Url.Action("GetActivityPagesByKeyword")",
            data: { keyword: keyword, currentPage: pageNum, orderMode: orderMode, minPrice: minPrice, maxPrice: maxPrice, priceFilter: priceFilter },
            success: function (result) {
                $("#showActivities").html(result);
                returnToActivityList();
            }
        });
    }
    //通過大類獲得活動資料頁
    function getActivityPagesByCategoryId(pageNum, categoryId, orderMode, minPrice, maxPrice, priceFilter) {
        $.ajax({
            type: "get",
            url: "@Url.Action("GetActivityPagesByCategoryId")",
            data: { categoryId: categoryId, currentPage: pageNum, orderMode: orderMode, minPrice: minPrice, maxPrice: maxPrice, priceFilter: priceFilter },
            success: function (result) {
                $("#showActivities").html(result);
                returnToActivityList();
            }
        });
    }
    //分類大項被點擊時的函數
    function categoryClick(categoryId) {
        let orderMode = $(":radio:checked").val();
        /////////////////////////////////
        console.log(orderMode);
        /////////////////////////////////
        let priceFilter = $("#priceFilter").prop("checked") ? 1 : 0;
        let values = html5Slider.noUiSlider.get();
        let minPrice = Math.round(values[0]);
        let maxPrice = Math.round(values[1]);
        saveHistory(`priceFilter=${priceFilter}&maxPrice=${maxPrice}&minPrice=${minPrice}&action=category&categoryid=${categoryId}&orderMode=${orderMode}&page=1`);
        getActivityPagesByCategoryId(1, categoryId,orderMode,minPrice,maxPrice,priceFilter);
    }
    //通過子類別獲得活動資料頁
    function getActivityPagesBySubCategoryId(pageNum, subCategoryId, orderMode, minPrice, maxPrice, priceFilter) {
        $.ajax({
            type: "get",
            url: "@Url.Action("GetActivityPagesBySubCategoryId")",
            data: { subCategoryId: subCategoryId, currentPage: pageNum, orderMode: orderMode, minPrice: minPrice, maxPrice: maxPrice, priceFilter: priceFilter },
            success: function (result) {
                $("#showActivities").html(result);
                returnToActivityList();
            }
        });
    }
    //通過地區獲得活動資料頁
    function getActivityPagesByDistrictId(pageNum, districtId, orderMode, minPrice, maxPrice, priceFilter) {
        $.ajax({
            type: "get",
            url: "@Url.Action("GetActivityPagesByDistrictId")",
            data: { districtId: districtId, currentPage: pageNum, orderMode: orderMode, minPrice: minPrice, maxPrice: maxPrice, priceFilter: priceFilter },
            success: function (result) {
                $("#showActivities").html(result);
                returnToActivityList();
            }
        });
    }
    //子類被點擊時的事件函數
    function subCategoryClick(subCategoryId) {
        let orderMode = $(":radio:checked").val();
        /////////////////////////////////
        console.log(orderMode);
        /////////////////////////////////
        let priceFilter = $("#priceFilter").prop("checked") ? 1 : 0;
        let values = html5Slider.noUiSlider.get();
        let minPrice = Math.round(values[0]);
        let maxPrice = Math.round(values[1]);
        saveHistory(`priceFilter=${priceFilter}&maxPrice=${maxPrice}&minPrice=${minPrice}&action=subcategory&subcategoryid=${subCategoryId}&orderMode=${orderMode}&page=1`);
        getActivityPagesBySubCategoryId(1, subCategoryId, orderMode,minPrice,maxPrice,priceFilter);
        addSubCategorySearchedTime(subCategoryId);
    }
    //增加子類別被搜索的次數的計數
    function addSubCategorySearchedTime(subCategoryId) {
        $.ajax({
            type: "get",
            url: "@Url.Action("AddSubCategorySearchedTime")",
            data: { subCategoryId: subCategoryId}
        });
    }
    //獲得活動的次詳細頁
    function getActivitySubDetailPage(activityId) {
        $.ajax({
            type: "get",
            url: "@Url.Action("GetActivitySubDetailPage")",
            data: { activityId: activityId },
            success: function (result) {
                $("#activitySubDetail").html(result);
                $("#activityListPageRight").hide(0, "swing", function () {
                    $("#activitySubDetail").show();
                    $(document).scrollTop(0);
                });
            }
        });
    }
    //關閉活動的次詳細頁回到活動列表
    function returnToActivityList() {
        $("#activitySubDetail").empty().hide(0, "swing", function () {
            $("#activityListPageRight").show();
        });
    }
    //刷新或者後退前進時排序按鈕同步改變
    function loadOrderModeBtnStatus() {
        if (window.location.hash == "") {
            $(`#btnGroupOrderMode input[value='scoredown']`).prop("checked",true).parent().addClass("active").siblings().removeClass("active focus");
        }
        else {
            let orderMode = turnToHashObj(window.location.hash.substring(1)).orderMode;
            $(`#btnGroupOrderMode input[value=${orderMode}]`).prop("checked",true).parent().addClass("active").siblings().removeClass("active focus");
        }
    }
    //刷新或者後退前進時價格篩選器同步改變
    function loadPriceFilterStatus() {
        if (window.location.hash == "") {
            html5Slider.noUiSlider.set([0,@(Model.MaxPriceAll/2)], false, true);
            $("#priceFilter").prop("checked", false);
        }
        else {
            let hashObj = turnToHashObj(window.location.hash.substring(1));
            let minPrice = hashObj.minPrice;
            let maxPrice = hashObj.maxPrice;
            let priceFilter = parseInt(hashObj.priceFilter);
            html5Slider.noUiSlider.set([minPrice, maxPrice], false, true);
            $("#priceFilter").prop("checked",Boolean(priceFilter));
        }
    }
    //把城市資訊塞入下拉框
    function loadDataToSelCity() {
        $.ajax({
            type: "get",
            url: "@Url.Action("getAllCity")",
            success: function (result) {
                $("#selCity").html("<option style='display:none' value='-1'>請選擇</option>");
                let cities = JSON.parse(result);
                for (let city of cities) {
                    let opt = $("<option></option>");
                    opt.html(city.CityName);
                    opt.val(city.CityID);
                    $("#selCity").append(opt);
                }
            }
        });
    }
    //根據城市讀取區資訊的函數
    function loadDataToSelDistrictByCityId(cityId) {
        $.ajax({
            type: "get",
            url: "@Url.Action("getDistrictsByCityId")",
            data: { cityId: cityId },
            success: function (result) {
                //如果選全部,就把cityId用負數紀錄在value
                $("#selDistrict").html(`<option value='${cityId*(-1)}'>全部</option>`);
                let districts = JSON.parse(result);
                for (let district of districts) {
                    let opt = $("<option></option>");
                    opt.html(district.DistrictName);
                    opt.val(district.DistrictId);
                    $("#selDistrict").append(opt);
                }
            }
        });
    }
    //價格篩選環境有變化時的函數
    function priceFilterConditionChange(minPrice, maxPrice, priceFilter) {
        if (window.location.hash != "") {
            let newHash = "";
            let hash = window.location.hash.substring(1);
            if (hash.indexOf("priceFilter") == -1) {
                let keyValues = hash.split("&");
                for (let i = 0; i < keyValues.length; i++) {
                    if (keyValues[i].indexOf("page") != -1) {
                        keyValues[i] = "page=1";
                    }
                }
                keyValues.unshift(`minPrice=${minPrice}`);
                keyValues.unshift(`maxPrice=${maxPrice}`);
                keyValues.unshift(`priceFilter=${priceFilter}`);
                newHash = keyValues.join("&");
            }
            else {
                let keyValues = hash.split("&");
                for (let i = 0; i < keyValues.length; i++) {
                    if (keyValues[i].indexOf("minPrice") != -1) {
                        keyValues[i] = `minPrice=${minPrice}`;
                    }
                    if (keyValues[i].indexOf("maxPrice") != -1) {
                        keyValues[i] = `maxPrice=${maxPrice}`;
                    }
                    if (keyValues[i].indexOf("priceFilter") != -1) {
                        keyValues[i] = `priceFilter=${priceFilter}`;
                    }
                    if (keyValues[i].indexOf("page") != -1) {
                        keyValues[i] = "page=1";
                    }
                }
                newHash = keyValues.join("&");
            }
            saveHistory(newHash);
            loadActivityPageByHashObj(turnToHashObj(newHash));
        }
        else {
            let newHash = `priceFilter=${priceFilter}&maxPrice=${maxPrice}&minPrice=${minPrice}&action=all&orderMode=scoredown&page=1`;
            saveHistory(newHash);
            loadActivityPageByHashObj(turnToHashObj(newHash));
        }
    }
    //點擊加入收藏要做的事
    function addToFav(activityId,sender) {
        $.ajax({
            type: "post",
            url: "@Url.Action("addToFavourite")",
            data: { activityId: activityId },
            success: function (result) {
                switch (result) {
                    case "noLogin":
                        alert("必須先登錄");
                        break;
                    case "addOK":
                        $(sender).children("i").css({ color: "#46A3FF" }).next().html("取消收藏");
                        break;
                    case "removeOK":
                        $(sender).children("i").css({ color: "white" }).next().html("加入收藏");
                        break;
                }
            }
        });
        event.stopPropagation();
    }
</script>
<style>
    .categoryHover:hover {
        background-color: #0094ff;
        color: azure
    }

    .ranking {
        list-style: none;
        padding-left: 0
    }

        .ranking li {
            margin-bottom: 5px
        }

        .ranking .rankItemName {
            display: inline-block;
            line-height: 20px;
            height: 20px;
            width: 60%;
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap
        }

        .ranking .rankNumber {
            display: inline-block;
            width: 20px;
            height: 20px;
            line-height: 20px;
            text-align: center;
            margin-right: 15px;
            color: #999;
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap
        }

    .sellCount {
        color: #999;
        font-size: 10px;
        float: right
    }

    .ranking li:nth-child(-n+3) .rankNumber {
        background-color: #00a1d6;
        color: white
    }

    .ranking a:hover {
        text-decoration: none;
        color: #0080FF
    }

    .ranking a {
        color: black
    }
    .headings {
        display: flex;
        flex-wrap: nowrap;
        align-items: center;
        padding: 2em 0 0 0;
    }

    .title {
        margin: 0;
        font-weight:bold;
    }

    .hr {
        display: block;
        flex: 1;
        margin: 0 30px;
        height: 3px;
        background: #D4D4D4;
    }
</style>
<!-- Page Content -->
<div class="row">

    <!-- Sidebar Widgets Column -->
    <div class="col-lg-3">
        <!-- Side Widget -->
        <div class="card my-4">
            <h5 class="card-header" style="font-weight:bold">排行榜</h5>
            <div class="card-body">
                <ul class="ranking">
                    @for (int i = 0; i < Model.Best10.Count(); i++)
                    {
                        int totalSell = Model.Best10[i].TotalSell;
                        <li>
                            <span class="rankNumber">@(i+1)</span>
                            <span class="rankItemName"><a href="@Url.Action("ActivityDetail",new { activityId = Model.Best10[i].ActivityId})">@Model.Best10[i].ActivityName</a></span>
                            <span class="sellCount">售出@(totalSell>999?"999":totalSell.ToString())</span>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <!-- Search Widget -->
        <div class="card my-4">
            <h5 class="card-header" style="font-weight:bold">搜索</h5>
            <div class="card-body">
                <div class="input-group">
                    <input id="txtKeyword" type="text" class="form-control" placeholder="搜尋關鍵字">
                    <span class="input-group-append">
                        <button id="btnSearch" class="btn btn-secondary" type="button">Go!</button>
                    </span>
                </div>
            </div>
        </div>
        <!--城市地區篩選-->
        <div class="card my-4">
            <h5 class="card-header" style="font-weight:bold">選擇活動城市地區</h5>
            <div class="card-body">
                <div class="form-group row">
                    <label class="col-md-4 col-form-label text-right">城市</label>
                    <div class="col-md-8">
                        <select id="selCity" name="city" class="form-control">
                            <option value="-1">請選擇</option>
                            <!--塞入城市資訊-->
                        </select>
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-md-4 col-form-label text-right">區域</label>
                    <div class="col-md-8">
                        <select id="selDistrict" name="district" class="form-control">
                            <option value="">請選擇</option>
                            <!--塞入區域資訊-->
                        </select>
                    </div>
                </div>
                <div class="form-group row mb-0">
                    <div class="col-md-offset-4 mx-auto">
                        <button id="btnCityDis" class="btn btn-success">搜索</button>
                    </div>
                </div>
            </div>
        </div>
        <!--分類大項-->
        <div class="card my-4">
            <h5 class="card-header" style="font-weight:bold">活動分類</h5>
            <div class="list-group list-group-flush">
                <div class="btn-group">
                    <button id="btnGetAll" type="button" class="btn btn-default categoryHover">
                        全部
                    </button>
                </div>
                @foreach (Categories categories in Model.Categories)
                {
                    int categoryActivityCount = categories.SubCategories.Sum(sc => sc.Activity.Where(a => a.ActivityStatusID == 1).Count());
                    <!--循環顯示大類-->
                    <div class="btn-group dropright">
                        <button onclick="categoryClick(@categories.CategoryID)" type="button" class="btn btn-default dropdown-toggle categoryHover" aria-haspopup="true" aria-expanded="false">
                            @categories.CategoryName
                            <span class="badge" style="font-size:5px;background-color:#84C1FF;color:white">@(categoryActivityCount>99?"99+":categoryActivityCount.ToString())</span>
                        </button>
                        <div class="dropdown-menu">
                            <!--循環顯示大類下面的子類,通過右邊滑出菜單展示-->
                            @foreach (SubCategories subCategories in categories.SubCategories)
                            {
                                int subcategoryActivityCount = subCategories.Activity.Where(a => a.ActivityStatusID == 1).Count();
                                <a href="javascript:;" onclick="subCategoryClick(@subCategories.SubCategoryId)" class="dropdown-item">
                                    @subCategories.SubCategoryName
                                    <span class="badge" style="font-size:5px;background-color:#84C1FF;color:white">@(subcategoryActivityCount>99?"99+":subcategoryActivityCount.ToString())</span>
                                </a>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
        <!-- Categories Widget -->
        <div class="card my-4">
            <h5 class="card-header" style="font-weight:bold">熱門搜索</h5>
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-6">
                        <ul class="list-unstyled mb-0">
                            @for (int i = 0; i < 3; i++)
                            {
                                //循環顯示熱門搜索前3項
                                <li>
                                    <a href="javascript:;" onclick="subCategoryClick(@Model.HotSubCategories[i].SubCategoryId)">@Model.HotSubCategories[i].SubCategoryName</a>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="col-lg-6">
                        <ul class="list-unstyled mb-0">
                            @for (int i = 3; i < 6; i++)
                            {
                                //循環顯示熱門搜索後3項
                                <li>
                                    <a href="javascript:;" onclick="subCategoryClick(@Model.HotSubCategories[i].SubCategoryId)">@Model.HotSubCategories[i].SubCategoryName</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.col-lg-3 -->
    <!-- col-lg-9 -->
    <div id="activityListPageRight" class="col-lg-9">
        <div class="headings">
            <span class="hr"></span>
            <h2 class="title">最新活動</h2>
            <span class="hr"></span>
        </div>
        <div id="carouselExampleIndicators" class="carousel slide mt-4" data-ride="carousel">
            <ol class="carousel-indicators">
                <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
            </ol>
            <div class="carousel-inner" role="listbox">
                <div class="carousel-item active">
                    <a href="@Url.Action("ActivityDetail",new { activityId=Model.ScrollImgActivities[0].ActivityID})"><img class="d-block img-fluid" src="@Url.Content("~/images/Activity/"+Model.ScrollImgActivities[0].Picture)" style="width:900px;height:350px;object-fit:cover" alt="slide"></a>
                </div>
                <div class="carousel-item">
                    <a href="@Url.Action("ActivityDetail",new { activityId=Model.ScrollImgActivities[1].ActivityID})"><img class="d-block img-fluid" src="@Url.Content("~/images/Activity/"+Model.ScrollImgActivities[1].Picture)" style="width:900px;height:350px;object-fit:cover" alt="slide"></a>
                </div>
                <div class="carousel-item">
                    <a href="@Url.Action("ActivityDetail",new { activityId=Model.ScrollImgActivities[2].ActivityID})"><img class="d-block img-fluid" src="@Url.Content("~/images/Activity/"+Model.ScrollImgActivities[2].Picture)" style="width:900px;height:350px;object-fit:cover" alt="slide"></a>
                </div>
            </div>
            <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
        <div class="headings">
            <span class="hr"></span>
            <h2 class="title">活動列表</h2>
            <span class="hr"></span>
        </div>
        <!--順序,價格篩選器-->
        <div class="row">
            <div class="col-md-4">
                <div id="btnGroupOrderMode" class="btn-group btn-group-toggle btn-group-sm m1-1 my-3" data-toggle="buttons">
                    <label class="btn btn-outline-info">
                        <input value="scoredown" type="radio" name="options" id="" autocomplete="off">評價 <i class='fas fa-angle-double-down' style="font-size:18px"></i>
                    </label>
                    <label class="btn btn-outline-info">
                        <input value="scoreup" type="radio" name="options" id="" autocomplete="off">評價 <i class='fas fa-angle-double-up' style="font-size:18px"></i>
                    </label>
                    <label class="btn btn-outline-secondary">
                        <input value="pricedown" type="radio" name="options" id="" autocomplete="off">價格 <i class='fas fa-sort-amount-down' style="font-size:18px"></i>
                    </label>
                    <label class="btn btn-outline-secondary">
                        <input value="priceup" type="radio" name="options" id="" autocomplete="off">價格 <i class='fas fa-sort-amount-up' style="font-size:18px"></i>
                    </label>
                </div>
            </div>
            <div class="col-md-8 my-auto">
                <div class="row align-items-center">
                    <div class="col-sm-auto">
                        <div style="width:200px;display:inline-block" id="slider"></div>
                        <input style="margin-left:20px" disabled type="text" id="min" />至<input type="text" id="max" disabled />
                        <input id="priceFilter" type="checkbox" />價格篩選
                    </div>
                </div>
            </div>
        </div>
        <!---->
        <div id="showActivities">
            <!--這裡面會動態塞入活動資料-->
        </div>
    </div>
    <!-- /.col-lg-9 -->
    <!--show出活動詳細與評論的分頁-->
    <div id="activitySubDetail" class="col-lg-9" style="display:none"></div>
</div>
<!-- /.row -->