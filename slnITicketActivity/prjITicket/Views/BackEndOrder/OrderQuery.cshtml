
@{
    /**/

    ViewBag.Title = "OrderQuery";
}
<link rel="stylesheet" href="~/Content/BackEnd/js/jquery-ui.min.js" />
<link rel="stylesheet" href="~/Content/BackEnd/css/jquery-ui.css" />
<!--Sweet Alert CDN-->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>


<h1 class="mt-4">訂單查詢</h1>
<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item">
        <a href="@Url.Action("BackEndIndex","BackEndMain")">後台</a>
    </li>
    <li class="breadcrumb-item active">
        訂單查詢
    </li>
</ol>
<div class="container-fluid">
    <!--查詢條件-->
    <div class="card mb-4">
        <div class="card-body">
            <div class="card-title">
                查詢條件
            </div>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text">訂單日期</span>
                </div>
                <input type="text" id="OrderStartDate" autocomplete="off" class="form-control clsdatepicker" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default" placeholder="起始日期">
                <label style="margin:5px">to</label>
                <input type="text" id="OrderEndDate" autocomplete="off" class="form-control clsdatepicker" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default" placeholder="結束日期">

            </div>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text">訂單編號</span>
                </div>
                <input type="text" id="txtOrderGuid" autocomplete="off" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="inputGroup-sizing-default">訂購人姓名</span>
                </div>
                <input type="text" id="txtUserName" autocomplete="off" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
            </div>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="inputGroup-sizing-default">訂購人email信箱</span>
                </div>
                <input type="text" id="txtUserEmail" autocomplete="off" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
            </div>
            <div class="input-group mb-3">
                <span class="input-group-text" id="inputGroup-sizing-default" style="margin-right:1%">訂單狀態</span>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" id="ckbox1" value="true" checked>
                    <label class="form-check-label" for="ckbox1" id="label1">已付款</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" id="ckbox0" value="false">
                    <label class="form-check-label" for="ckbox0" id="label2">未付款</label>
                </div>
            </div>
            <button type="button" id="btn_Search" class="btn btn-primary" style="width:100%"><i class="fas fa-search"></i>  查詢</button>
        </div>
        <!--中間一條沒有意義的線-->
        <div class="card mb-4">
        </div>
        <!--查詢結果-->
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-table mr-1"></i>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered" id="OrderTable" style="width:100%;font-size:14px" cellspacing="0"></table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    function OrderDetail(OrderID, OrderGuid) {
        let OrderDetailTitle = `<label style="font-size:20px">訂單編號：[${OrderGuid}] </label> </br><p style="font-size:20px"> 訂單明細</p>`;
        let OrderDetailhtml = `
                    <input type="text" value="${OrderID}" hidden>

                    <div class="table-responsive" style="font-size:14px">
                        <table class="table table-bordered" id="OrderDetailTable" width="100%" cellspacing="0"></table>
                    </div>`;

        Swal.fire({
            title: OrderDetailTitle,
            width: 1000,
            html: OrderDetailhtml,
            didRender: () => { OrderDetailTablesSettings(OrderID); },
            confirmButtonText: "關閉",
            showCloseButton: true,

        });

    }

    function OrderDetailTablesSettings(OrderID) {
        var OrderDetailTablesSettings = {
            searching: false, //關閉search filter功能
            scrollCollapse: true,
            lengthMenu: [[5, 10, 20, -1], [5, 10, 20, "All"]],
            autoWidth: false,
            language: {
                paginate: {
                    previous: "上一頁",
                    next: "下一頁"
                },
                sProcessing: "處理中…",
                sInfo: "顯示第 _START_ 至 _END_ 筆, 共 _TOTAL_ 筆",
                sInfoEmpty: "顯示第 0 至 0 筆, 共 0 筆",
                lengthMenu: "顯示 _MENU_ 項結果",
                zeroRecords: "沒有符合的結果",
            },
            ajax: {
                type: "post",
                url: "/api/WebApi/getOrderDetail",
                dataSrc: "",
                dataType: "JSON",
                data: {
                    OrderID: OrderID
                },
            },
            serverSide: false,

            columns: [
                {
                    "title": "訂單日期",
                    "data": "OrderDate",
                    "render": function (data, type, row, meta) {
                        return new Date().Format("yyyy-MM-dd hh:mm:ss");
                    }
                },
                {
                    "title": "活動名稱",
                    "data": "ActivityName",
                },
                {
                    "title": "場次時間",
                    "data": "TicketTime",
                    "render": function (data, type, row, meta) {
                        return new Date().Format("yyyy-MM-dd hh:mm");
                    }
                },
                {
                    "title": "票種",
                    "data": "TicketCategoryName",
                },
                {
                    "title": "原價",
                    "data": "TicketPrice",
                },
                {
                    "title": "折扣後金額",
                    "data": "Discount",
                    "render": function (data, type, row, meta) {
                        console.log(data);
                        return Math.round(row.TicketPrice * (1 - data))
                    }
                },
                {
                    "title": "張數",
                    "data": "Quantity",
                }
            ],
            fnServerParams: function (aoData) {
                aoData._rand = Math.random();
            },
            fnDrawCallback: function () {

            }
        }

        $("#OrderDetailTable").dataTable(OrderDetailTablesSettings);
    }

</script>
<script type="text/javascript">
    $(function () {

        function dataTablesSettings() {
            var dataTablesSettings = {
                searching: false, //關閉search filter功能
                scrollCollapse: true,

                lengthMenu: [[5, 10, 20, -1], [5, 10, 20, "All"]],
                autoWidth: false,
                language: {
                    paginate: {
                        previous: "上一頁",
                        next: "下一頁"
                    },
                    sProcessing: "處理中…",
                    sInfo: "顯示第 _START_ 至 _END_ 筆, 共 _TOTAL_ 筆",
                    sInfoEmpty: "顯示第 0 至 0 筆, 共 0 筆",
                    lengthMenu: "顯示 _MENU_ 項結果",
                    zeroRecords: "沒有符合的結果",
                },
                ajax: {
                    type: "post",
                    url: "/api/WebApi/getOrders",
                    dataSrc: "",
                    dataType: "JSON",
                    data: {
                        OrderStatus0: $("#ckbox0").prop("checked") ? $("#ckbox0").val() : null,
                        OrderStatus1: $("#ckbox1").prop("checked") ? $("#ckbox1").val() : null,
                        OrderGuid: $("#txtOrderGuid").val(),
                        UserName: $("#txtUserName").val(),
                        UserEmail: $("#txtUserEmail").val(),
                        StartTime: $("#OrderStartDate").val(),
                        EndTime: $("#OrderEndDate").val()

                    },
                },
                //設置是否透過Server端處理分頁、排序、過濾處理機制模式，
                //也就是決定這三者功能是否給Server端處理好在回傳給前端顯示，或全都給Client端去做處理，
                //參數值有true/false。
                //簡單來說，就是讓前端處理分頁的功能
                serverSide: false,

                //指定Server端的資料行繫結名稱
                columns: [

                    {
                        "title": "訂單日期",
                        "data": "OrderDate",
                        "render": function (data, type, row, meta) {
                            return new Date(row.OrderDate).Format("yyyy-MM-dd");
                        }
                    },
                    {
                        "title": "訂單編號",
                        "data": "OrderGuid",
                    },
                    {
                        "title": "姓名",
                        "data": "UserName",
                    },
                    {
                        "title": "Email",
                        "data": "Email",
                    },
                    {
                        "title": "訂單金額",
                        "data": "OrderPrice",
                        "render": function (data, type, row, meta) {
                            //console.log(row);
                            return data - row.PayPoint
                        }
                    },
                    {
                        "title": "使用點數",
                        "data": "PayPoint",
                    },
                    {
                        "title": "付款狀態",
                        "data": "OrderStatus",
                        "render": function (data, type, row, meta) {
                            return data = data ? "已付款" : "未付款";
                        }
                    },
                    {
                        "title": " ",
                        "data": "OrderID",
                        "render": function (data, type, row, meta) {
                            return data = '<button class="btn btn-info btn-sm" data-id='
                                + data
                                + ' onclick="OrderDetail('
                                + data
                                + ', \''
                                + row.OrderGuid
                                + '\')"><i class="fa fa-search"></i>訂單明細</button>';

                        }
                    }
                ],
                fnServerParams: function (aoData) {
                    aoData._rand = Math.random();
                },
                fnDrawCallback: function () {

                }
            }

            return dataTablesSettings;
        }

        var table = $("#OrderTable").dataTable(dataTablesSettings());

        $("#btn_Search").click(function () {
            //搜尋就設置參數，刪掉datatable重新再建一個
            if (!$("#ckbox0").prop("checked") && !$("#ckbox1").prop("checked")) {
                errorMessage();
                table.fnDestroy(false);
                table = $("#OrderTable").dataTable(dataTablesSettings());
                table.fnPageChange(0);

            }
            else {

                table.fnDestroy(false);
                table = $("#OrderTable").dataTable(dataTablesSettings());

                //搜尋後跳轉到第一頁
                table.fnPageChange(0);
            }
        });
    })


    function errorMessage() {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: '至少需選擇一種訂單狀態',
        })

    }

    Date.prototype.Format = function (fmt) {
        var o = {
            "M+": this.getMonth() + 1, //月份
            "d+": this.getDate(), //日
            "h+": this.getHours(), //小时
            "m+": this.getMinutes(), //分
            "s+": this.getSeconds() //秒
        };
        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
        for (var k in o)
            if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        return fmt;
    }


    $(function () {
        $(".clsdatepicker").datepicker({
            dateFormat: 'yy-mm-dd', autoSize: true
        });
        //$("#OrderStartDate").formatDate("yy-mm-dd", new Date());

    });
</script>
